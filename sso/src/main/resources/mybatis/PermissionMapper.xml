<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fsr.sso.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="org.fsr.sso.entity.Permission">
    <constructor>
      <idArg column="ID" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="PERMISSION_CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PERMISSION_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATE_BY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATE_DATE" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="IS_ENABLE" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PERMISSION_CODE, PERMISSION_NAME, CREATE_BY, CREATE_DATE, IS_ENABLE
  </sql>
  <select id="selectByExample" parameterType="org.fsr.sso.dao.example.PermissionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from f_permission
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from f_permission
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="org.fsr.sso.entity.Permission">
    update f_permission
    <set>
      <if test="permissionCode != null">
        PERMISSION_CODE = #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="permissionName != null">
        PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnable != null">
        IS_ENABLE = #{isEnable,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.fsr.sso.entity.Permission">
    update f_permission
    set PERMISSION_CODE = #{permissionCode,jdbcType=VARCHAR},
      PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      IS_ENABLE = #{isEnable,jdbcType=CHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>